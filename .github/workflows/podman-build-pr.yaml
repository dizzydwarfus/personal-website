name: Build with Podman

on:
  pull_request:

jobs:
  build-pr:
    if: |
      github.event_name == 'push' || github.event_name == 'pull_request'

    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_ACCOUNT_ID: "545009859307"
      AWS_REGION: "eu-north-1"
      APP_NAME: "personal-website"
      PR_NUM: ${{ github.event.pull_request.number || 'latest' }}
      S3_BUCKET_ACCOUNT_ID: "216989125379"
      S3_BUCKET: "216989125379-personal-website-assets"
      S3_FOLDER: "public"
      MAIN_ROLE_ARN: "arn:aws:iam::545009859307:role/github-actions"
      PROD_ROLE_ARN: "arn:aws:iam::216989125379:role/github-s3-prod-access"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Podman
        run: |
          sudo apt update
          sudo apt install -y podman
          podman --version
          aws --version

      - name: Assume Role in Main AWS Account
        id: assume-main
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.MAIN_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Assume Role in Prod AWS Account (S3 Access)
        id: assume-prod
        run: |
          CREDS=$(aws sts assume-role \
            --role-arn ${{ env.PROD_ROLE_ARN }} \
            --role-session-name GitHubActionsProdRole \
            --query "Credentials" \
            --output json)

          echo "AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.SessionToken')" >> $GITHUB_ENV
          echo "::add-mask::$(echo $CREDS | jq -r '.AccessKeyId')"
          echo "::add-mask::$(echo $CREDS | jq -r '.SecretAccessKey')"
          echo "::add-mask::$(echo $CREDS | jq -r '.SessionToken')"

      # bucket is in "prod" account while ecr in "main" - need to assume role in prod with role in main > source=main; target=prod; principal=main<role-arn>
      - name: Sync S3 Public Assets to `public/`
        run: |
          mkdir -p public
          aws s3 sync s3://${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}/ public/

      - name: Build with Podman
        run: |
          podman build --platform linux/arm64 -t ${{ env.APP_NAME }}:pr-${{ env.PR_NUM }} .
